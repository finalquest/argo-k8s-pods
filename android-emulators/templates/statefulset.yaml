apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.nameOverride }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.nameOverride }}
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.nameOverride }}
  serviceName: {{ .Values.nameOverride }}
  template:
    metadata:
      labels:
        app: {{ .Values.nameOverride }}
        app.kubernetes.io/managed-by: Helm
    spec:
      nodeSelector:
{{- if .Values.nodeSelector }}
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: {{ .Values.nameOverride }}
      containers:
        - name: emulator
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 6080
              name: vnc-web
            - containerPort: 5900
              name: vnc
            - containerPort: 5554
            - containerPort: 5555
              name: adb
            - containerPort: 6090
          env:
            - name: EMULATOR_NO_WINDOW
              value: {{ .Values.env.EMULATOR_NO_WINDOW | quote }}
            - name: EMULATOR_DEVICE
              value: {{ .Values.env.EMULATOR_DEVICE | quote }}
            - name: WEB_VNC
              value: {{ .Values.env.WEB_VNC | quote }}
            - name: RHOST
              value: {{ .Values.env.RHOST | quote }}
{{- if .Values.gpu.enabled }}
            - name: EMULATOR_GPU
              value: "host"
{{- end }}
          securityContext:
            privileged: true
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
            - name: kvm
              mountPath: /dev/kvm
            - name: scripts
              mountPath: /scripts
{{- if .Values.gpu.enabled }}
            - name: dri
              mountPath: /dev/dri
            - name: x11sock
              mountPath: /tmp/.X11-unix
{{- end }}
      volumes:
        - name: kvm
          hostPath:
            path: /dev/kvm
            type: CharDevice
        - name: scripts
          configMap:
            name: {{ .Values.nameOverride }}-runner
            defaultMode: 0755
{{- if .Values.gpu.enabled }}
        - name: dri
          hostPath:
            path: /dev/dri
            type: Directory
        - name: x11sock
          hostPath:
            path: /var/lib/xorg/.X11-unix  # mismo path que exporta el pod Xorg
            type: Directory
{{- end }}